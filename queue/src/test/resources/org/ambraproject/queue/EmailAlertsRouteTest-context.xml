<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2006-2012 by Public Library of Science http://plos.org http://ambraproject.org
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

  <import resource="classpath*:org/ambraproject/action/hibernate-context.xml"/>

  <bean id="mailer" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="${plos.camel.mail"/>
  </bean>

  <bean id="defaultEncodingCharset" class="java.lang.String">
    <constructor-arg value="UTF-8"/>
  </bean>

  <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
    <property name="templateLoaderPath" value="/"/>
    <property name="defaultEncoding" ref="defaultEncodingCharset"/>
  </bean>

  <bean id="freeMarkerMailer" class="org.ambraproject.ambra.email.impl.FreemarkerTemplateMailer">
    <property name="mailSender" ref="mailer"/>
    <property name="freemarkerConfig" ref="freemarkerConfig"/>
    <property name="fromEmailAddress" value="${ambra.queue.fromEmailAddress}" />
    <property name="fromEmailName" value="${ambra.queue.fromEmailName}" />
  </bean>

  <bean id="searchService" class="org.ambraproject.service.search.SolrSearchService">
    <property name="serverFactory" ref="solrJournalAlerts"/>
    <property name="configuration" ref="ambraConfiguration"/>
  </bean>

  <bean id="journalService" class="org.ambraproject.service.journal.JournalServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="configuration" ref="ambraConfiguration"/>
  </bean>

  <bean id="rolesEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="RolesCache"/>
  </bean>

  <bean id="rolesCache" class="org.ambraproject.service.cache.EhcacheProvider">
    <constructor-arg index="0" ref="rolesEhCache"/>
  </bean>

  <bean id="permissionsService" class="org.ambraproject.service.permission.PermissionsServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="rolesCache" ref="rolesCache"/>
  </bean>

  <bean id="articleService" class="org.ambraproject.service.article.ArticleServiceImpl">
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="permissionsService" ref="permissionsService"/>
  </bean>

  <bean id="browseSolrEhcache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <property name="cacheName" value="BrowseSolrCache"/>
  </bean>

  <bean id="browseSolrCache" class="org.ambraproject.service.cache.EhcacheProvider">
    <constructor-arg index="0" ref="browseSolrEhcache"/>
    <constructor-arg index="1" value="false"/>
  </bean>

  <bean id="browseService" class="org.ambraproject.service.article.BrowseServiceImpl">
    <property name="articleService" ref="articleService"/>
    <property name="journalService" ref="journalService"/>
    <property name="sessionFactory" ref="sessionFactory"/>
    <property name="browseSolrCache" ref="browseSolrCache"/>
    <property name="configuration" ref="ambraConfiguration" />
  </bean>

  <bean id="journalSearchAlerts" class="org.ambraproject.search.JournalSearchAlertsImpl">
    <property name="searchService" ref="searchService"/>
    <property name="journalService" ref="journalService"/>
    <property name="browseService" ref="browseService"/>
    <property name="mailer" ref="freeMarkerMailer"/>
  </bean>

  <bean id="solrJournalAlerts" class="org.ambraproject.testutils.EmbeddedSolrServerFactory" destroy-method="tearDown"/>

  <bean id="ambraConfiguration" class="org.ambraproject.testutils.AmbraTestConfigurationFactory"
        factory-method="getConfiguration">
    <constructor-arg index="0" value="ambra-test-config.xml"/>
  </bean>

  <bean id="routeBuilder" class="org.ambraproject.routes.EmailAlertsRoutes">
    <!-- Basically, never run, the route is started manually in the queue-->
    <property name="weeklyCron" value="*+*+*+1+*+?"/>
    <property name="monthlyCron" value="*+*+*+1+*+?"/>
  </bean>

  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
    <jmxAgent id="ambra-queue" createConnector="false"/>
    <routeBuilder ref="routeBuilder"/>
  </camelContext>

</beans>

